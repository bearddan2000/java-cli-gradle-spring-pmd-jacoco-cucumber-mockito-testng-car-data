plugins {
  id 'com.github.ben-manes.versions' version '0.13.0' // gradle dependencyUpdates
  id 'pmd'
  id 'se.thinkcode.cucumber-runner' version '0.0.8'
}

apply plugin: 'java'
apply plugin: 'jacoco'

targetCompatibility = sourceCompatibility = JavaVersion.VERSION_1_8

group = group

jar {
  version = version
  baseName = baseName
}

repositories {
  jcenter()
  mavenCentral()
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
        html.destination file("${buildDir}/reports/html/jacoco")
        xml.destination file("${buildDir}/reports/xml/jacoco")
        csv.destination file("${buildDir}/reports/csv/jacoco")
    }
}

ext {
  lombokVersion = '1.18.22'
  springVersion = '5.0.1.RELEASE'
}

dependencies {
  compileOnly "org.projectlombok:lombok:${lombokVersion}"
  annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

  testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
  testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

  testImplementation "org.mockito:mockito-all:1.9.5"

  testImplementation platform("io.cucumber:cucumber-bom:7.0.0")
  testImplementation 'io.cucumber:cucumber-java'
  testImplementation 'io.cucumber:cucumber-testng'

  implementation "org.springframework:spring-context:${springVersion}"
  testImplementation "org.springframework:spring-test:${springVersion}"

}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumberCli() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
              '--plugin', 'pretty',
              '--plugin', 'html:target/cucumber-report.html']
        }
    }
}

cucumber {
    main = "io.cucumber.core.cli.Main"
}

// Configure PMD.
pmd {
    ignoreFailures = true
    toolVersion = "6.23.0"                             // The version of PMD to use.
    ruleSetFiles = files("config/pmd/pmd.xml")         // The location of the configuration file.
    ruleSets = []                                      // Ignore the default rules. The ones this config
                                                       // uses are set with the ruleSetFiles property.
}

defaultTasks "clean", "build"
